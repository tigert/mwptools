#!/bin/sh

dnf groupinstall development-libs development-tools gnome-software-development
dnf install gtk3-devel gstreamer1-devel clutter-devel webkit2gtk3-devel \
    libgda-devel gobject-introspection-devel
dnf install vala vala-devel vala-tools vala-doc
dnf install libchamplain-gtk-devel libgdl-devel libgudev1-devel \
    espeak-devel vte291-devel ncurses-devel


## Shallow clone mwp ....
# git clone --depth 1 https://github.com/stronnag/mwptools
# cd mwptools
# make && sudo make install

## for bbox-replay stuff
dnf install ruby

## On some versions *F27*, the you may also need
dnf install rubygem-json

## if you want to use speech-dispatcher instead of espeak for voice
## synthesis (or have a choice of either)
## gsettings set org.mwptools.planner speech-api 'speechd'
## or (default)
## gsettings set org.mwptools.planner speech-api 'espeak'

# dnf install speech-dispatcher-devel

## optionally, flite for text to speech ...
## However, at for for fedora 28 and prior, this is pointless as we need 2.x and Fedora ships 1.x
## dnf install flite flite-devel

## For plot-elevation.rb
dnf install gnuplot rubygem-nokogiri

## To use KMZ as an overlay format, you need 'unzip
#dnf install unzip

## To build bbsummary and otxlog you need golang
# dnf install golang

## If you want to use serial devices for bbox replay (and you probably
## don't) then see
##  https://developer.fedoraproject.org/tech/languages/ruby/gems-installation.html

## You must install the blackbox utilities
## https://github.com/iNavFlight/blackbox-tools
## in order to replay blackbox logs.

# git clone --depth 1  https://github.com/iNavFlight/blackbox-tools
# cd blackbox-tools/
# make
# sudo cp  obj/blackbox_decode obj/blackbox_render /usr/local/bin/

## and you can use this file to install everything:)
## In some cases, removing the comments (like above for blackbox)

# cp fedora.txt /tmp/fedora-deps.sh
# chmod +x /tmp/fedora-deps.sh
# sudo /tmp/fedora-deps.sh

## Then build it / update
# cd mwptools; git pull && make && sudo make install

## The default instruction only set up the master branch (in order in
## minimise the initial setup) .
## In order to access other branches:
# git remote set-branches origin '*'
# git fetch -v
## Then:
## $ git branch
##   development
## * master
### And one can checkout development
#  git checkout development
## Switched to branch 'development'
## Your branch is up to date with 'origin/development'.

## Note: If you change a dependency (e.g. add addtional text to speech
## modules) then you need to force a rebuild for mwp to recognise the
## change:
##
## cd mwptools; make clean all
##
